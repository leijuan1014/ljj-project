<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiss.dao.shops.CardDealsDao">
	<resultMap id="CardDealsMapper" type="com.xiss.model.shops.CardDeals">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="balance_id" property="balanceId" jdbcType="INTEGER" />
		<result column="seller_id" property="sellerId" jdbcType="INTEGER" />
		<result column="second_seller_id" property="secondSellerId" jdbcType="INTEGER" />
		<result column="suite_order_id" property="suiteOrderId" jdbcType="INTEGER" />
		<result column="trade_no" property="tradeNo" jdbcType="VARCHAR" />
		<result column="customer_id" property="customerId" jdbcType="INTEGER" />
		<result column="card_id" property="cardId" jdbcType="INTEGER" />
		<result column="commission_portion" property="commissionPortion" jdbcType="DOUBLE" />
		<result column="second_commission_portion" property="secondCommissionPortion" jdbcType="DOUBLE" />
		<result column="commission" property="commission" jdbcType="DOUBLE" />
		<result column="second_commission" property="secondCommission" jdbcType="DOUBLE" />
		<result column="created_at" property="createdAt" jdbcType="DATE" />
		<result column="updated_at" property="updatedAt" jdbcType="DATE" />
		<result column="yearMonth" property="yearMonth" jdbcType="VARCHAR" />
		<result column="totalCommission" property="totalCommission" jdbcType="DOUBLE" />
	</resultMap>
	
	<resultMap id="CardsMapper" type="java.util.Map">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="balance_id" property="balanceId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="start" property="start" jdbcType="VARCHAR" />
		<result column="end" property="end" jdbcType="VARCHAR" />
		<result column="updated_at" property="updatedAt" jdbcType="DATE" />
		<result column="licensed_id" property="licensedId" jdbcType="VARCHAR" />
		<result column="commission" property="commission" jdbcType="DOUBLE" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="limit" property="limit" jdbcType="INTEGER" />
		<result column="offset" property="offset" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="CardCountMapper" type="java.lang.Integer">
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="CardDealsDetailMapper" type="java.util.Map">
		<result column="start" property="start" jdbcType="VARCHAR" />
		<result column="end" property="end" jdbcType="VARCHAR" />
		<result column="updated_at" property="updatedAt" jdbcType="DATE" />
		<result column="commission" property="commission" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="licensed_id" property="licensedId" jdbcType="VARCHAR" />
		<result column="seller_id" property="sellerId" jdbcType="INTEGER" />
		<result column="limit" property="limit" jdbcType="INTEGER" />
		<result column="offset" property="offset" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="CardDealsCountMapper" type="java.lang.Integer">
		<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="CardDealsSumMapper" type="java.lang.Double">
		<result column="start" property="start" jdbcType="VARCHAR" />
		<result column="end" property="end" jdbcType="VARCHAR" />
		<result column="totalCommission" property="totalCommission" jdbcType="DOUBLE" />
		<result column="seller_id" property="sellerId" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="SumCommissionGroupByUserIdMapper" type="java.util.Map">
		<result column="start" property="start" jdbcType="VARCHAR" />
		<result column="end" property="end" jdbcType="VARCHAR" />
		<result column="sumCommission" property="sumCommission" jdbcType="VARCHAR" />
		<result column="sellerId" property="sellerId" jdbcType="INTEGER" />
	</resultMap>
	<insert id="insert" parameterType="com.xiss.model.shops.CardDeals" useGeneratedKeys="true" keyProperty="id">  
      insert into card_deals (id, seller_id, customer_id, card_id, created_at, updated_at, commission, suite_order_id, trade_no) 
      values (nextval('card_deals_id_seq'), #{sellerId}, #{customerId}, #{cardId}, now(), now(), #{commission}, #{suiteOrderId}, #{tradeNo})
    </insert>
    <update id="updateBalanceId" parameterType="java.util.HashMap">
	 update card_deals set balance_id = ${balanceId}, updated_at=now()
	 where id = #{id}
	</update>
    <update id="update" parameterType="java.util.HashMap">
	 update card_deals set card_id = ${cardId}, commission = #{commission}, updated_at=now()
	 where trade_no = #{tradeNo}
	</update>
    <select id="getBySuiteOrderId" parameterType="java.lang.Integer" resultMap="CardDealsMapper">
		SELECT * FROM card_deals WHERE suite_order_id = #{suiteOrderId}
	</select>
	<select id="getByTradeNo" parameterType="java.lang.String" resultMap="CardDealsMapper">
		SELECT * FROM card_deals WHERE trade_no = #{tradeNo}
	</select>
	<select id="getBySellerId" parameterType="java.util.HashMap" resultMap="CardDealsMapper">
		SELECT * FROM card_deals WHERE seller_id = #{sellerId}
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>
	</select>
	<select id="getTotalCommissionSellerId" parameterType="java.util.HashMap" resultMap="CardDealsMapper">
		select to_char(created_at,'YYYY-mm') as yearMonth, sum(commission) as totalCommission from card_deals where seller_id=#{sellerId}
		group by yearMonth order by yearMonth desc
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>		
	</select>
	<select id="getSellRecords" parameterType="java.util.HashMap" resultMap="CardsMapper">
		select ROW_NUMBER() OVER (ORDER BY users.updated_at desc) as rownum,
		users.id as user_id,users.mobile as mobile, to_char(users.updated_at,'YYYY-MM-DD HH12:MI:SS') as updated_at, 
		card_deals.commission as commission, 
		suite_orders.price as price,
        suite_orders.state
		from users, card_deals, suite_orders
		where users.id = card_deals.customer_id 
        and users.id = suite_orders.user_id 
        and suite_orders.id=card_deals.suite_order_id 
        and users.invited_by=#{userId} and card_deals.seller_id=#{userId} 
        <if test="balanceId != null and balanceId > 0">
			<![CDATA[ and card_deals.balance_id = #{balanceId}]]>
        </if>
        <if test="state != null">
			<![CDATA[ and suite_orders.state = #{state}]]>
        </if>
        <if test="start != null and start != ''">
			<![CDATA[ and users.updated_at >= '${start} 00:00:00']]>
        </if>
        <if test="end != null and end != ''">
        	<![CDATA[ and users.updated_at <= '${end} 23:59:59']]>
        </if>
        order by users.updated_at desc
		<if test="limit != null and limit > 0">
			<![CDATA[ limit ${limit}]]>
	    </if>
	    <if test="offset != null and offset > 0">
			<![CDATA[ offset ${offset}]]>
	    </if>
	</select>
	<select id="getSellRecordCount" parameterType="java.lang.Integer" resultMap="CardCountMapper">
		select count(users.id) as count
		from users, card_deals, suite_orders
		where users.id = card_deals.customer_id 
        and users.id = suite_orders.user_id 
        and suite_orders.id=card_deals.suite_order_id 
        and users.invited_by=#{userId} and card_deals.seller_id=#{userId} 
        <if test="balanceId != null and balanceId > 0">
			<![CDATA[ and card_deals.balance_id = #{balanceId}]]>
        </if>
        <if test="state != null">
			<![CDATA[ and suite_orders.state = #{state}]]>
        </if>
        <if test="start != null and start != ''">
			<![CDATA[ and users.updated_at >= '${start} 00:00:00']]>
        </if>
        <if test="end != null and end != ''">
        	<![CDATA[ and users.updated_at <= '${end} 23:59:59']]>
        </if>
	</select>
	<select id="getAllCards" parameterType="java.util.HashMap" resultMap="CardsMapper">
		select ROW_NUMBER() OVER (ORDER BY users.updated_at desc) as rownum,
		users.id as user_id,users.mobile as mobile, to_char(users.updated_at,'YYYY-MM-DD HH12:MI:SS') as updated_at, 
		cars.licensed_id as licensed_id,
		card_deals.commission as commission, 
		suite_orders.price as price 
		from users
		left join cars on users.id = cars.user_id
		left join card_deals on users.id = card_deals.customer_id 
		left join cards on cars.id = cards.car_id
		left join suite_orders on suite_orders.id=card_deals.suite_order_id
		where users.invited_by=#{userId}  
		<if test="start != null and start != ''">
			<![CDATA[ and users.updated_at >= '${start} 00:00:00']]>
        </if>
        <if test="end != null and end != ''">
        	<![CDATA[ and users.updated_at <= '${end} 23:59:59']]>
        </if>
        order by users.updated_at desc
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>
	</select>
	<select id="getPaidCards" parameterType="java.util.HashMap" resultMap="CardsMapper">
		select ROW_NUMBER() OVER (ORDER BY users.updated_at desc) as rownum,
		users.id as user_id,users.mobile as mobile, to_char(users.updated_at,'YYYY-MM-DD HH12:MI:SS') as updated_at, 
		cars.licensed_id as licensed_id,
		card_deals.commission as commission, 
		suite_orders.price as price 
		from users
		left join cars on users.id = cars.user_id
		inner join card_deals on users.id = card_deals.customer_id 
		inner join suite_orders on suite_orders.id=card_deals.suite_order_id
		where users.invited_by=#{userId} and suite_orders.state=3 
		<if test="start != null and start != ''">
			<![CDATA[ and users.updated_at >= '${start} 00:00:00']]>
        </if>
        <if test="end != null and end != ''">
        	<![CDATA[ and users.updated_at <= '${end} 23:59:59']]>
        </if>
        order by users.updated_at desc
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>        
	</select>
	<select id="getNoPaidCards" parameterType="java.util.Map" resultMap="CardsMapper">
		select ROW_NUMBER() OVER (ORDER BY users.updated_at desc) as rownum,
		users.id as user_id,users.mobile as mobile, to_char(users.updated_at,'YYYY-MM-DD HH12:MI:SS') as updated_at from users
		where users.invited_by=#{userId} and users.id not in 
		(select card_deals.customer_id from card_deals,suite_orders where suite_orders.id=card_deals.suite_order_id and card_deals.seller_id=#{userId} and suite_orders.state = 3)
		<if test="start != null and start != ''">
			<![CDATA[ and users.updated_at >= '${start} 00:00:00']]>
        </if>
        <if test="end != null and end != ''">
        	<![CDATA[ and users.updated_at <= '${end} 23:59:59']]>
        </if>
        order by users.updated_at desc
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>        
	</select>
	
	<select id="getCardDealsCountByUserId" parameterType="java.util.Map" resultMap="CardDealsCountMapper" resultType="java.lang.Integer">
	select count(id) as count from card_deals
	where seller_id=${sellerId}
	<if test="start != null and start != ''">
		<![CDATA[ and card_deals.created_at >= '${start} 00:00:00']]>
    </if>
    <if test="end != null and end != ''">
        <![CDATA[ and card_deals.created_at < '${end} 23:59:59']]>
    </if>
	</select>
	
	<select id="getCardDealsSumCommissionByUserId" parameterType="java.util.Map" resultMap="CardDealsSumMapper" resultType="java.lang.Double">
	select sum(commission) as totalCommission from card_deals
	where seller_id=${sellerId} 
	<if test="start != null and start != ''">
		<![CDATA[ and card_deals.created_at >= '${start} 00:00:00']]>
    </if>
    <if test="end != null and end != ''">
        <![CDATA[ and card_deals.created_at < '${end} 23:59:59']]>
    </if>
	</select>
	
	<select id="getCardDealsByUserId" parameterType="java.util.Map" resultMap="CardDealsDetailMapper">
	select ROW_NUMBER() OVER (ORDER BY card_deals.updated_at desc) as rownum,
	to_char(card_deals.updated_at,'YYYY-MM-DD HH12:MI:SS') as updated_at, 
	card_deals.commission as commission,users.mobile as mobile,cars.licensed_id as licensed_id  
	from card_deals, users, cars
	where card_deals.customer_id=users.id and users.id=cars.user_id 
	and card_deals.seller_id=#{sellerId} and card_deals.commission > 0
	<!-- and to_char(card_deals.updated_at,'yyyy-MM')='${yearMonth}' -->
	<if test="start != null and start != ''">
		<![CDATA[ and card_deals.created_at >= '${start} 00:00:00']]>
    </if>
    <if test="end != null and end != ''">
        <![CDATA[ and card_deals.created_at < '${end} 23:59:59']]>
    </if>
    ORDER BY card_deals.updated_at desc
	<if test="limit != null and limit > 0">
		<![CDATA[ limit ${limit}]]>
    </if>
    <if test="offset != null and offset > 0">
		<![CDATA[ offset ${offset}]]>
    </if>
	</select>
	<select id="sumCommissionGroupByUserId" parameterType="java.util.Map" resultMap="SumCommissionGroupByUserIdMapper">
	<![CDATA[
	select seller_id as sellerId, sum(commission) as sumCommission 
	from card_deals where 1=1 and commission > 0 and created_at >='${start} 00:00:00' and created_at<'${end} 23:59:59' group by seller_id
	]]>
	</select>
	<!-- 
	<select id="sumCommissionGroupByUserId" parameterType="java.util.Map" resultMap="SumCommissionGroupByUserIdMapper">
	select seller_id as sellerId, sum(commission) as sumCommission from card_deals where created_at >='${start}' and created_at<'${end}' group by seller_id
	</select>
	 -->
</mapper>