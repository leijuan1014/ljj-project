<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
     
	<!-- 自动扫描注解的bean -->
	<context:component-scan base-package="com.xiss.service com.xiss.api com.xiss.controller"/>
    <context:annotation-config/>
    <mvc:annotation-driven>  
	    <mvc:message-converters register-defaults="true">  
	        <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->  
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	            <constructor-arg value="UTF-8" />  
	            <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />  
	        </bean>  
	        <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->  
	        <bean  
	            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	            <property name="prettyPrint" value="true" />  
	            <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />  
	        </bean>  
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/"/>
		<property name="velocityProperties">    
	        <props>    
	            <prop  key="input.encoding">UTF-8</prop>    
	            <prop  key="output.encoding">UTF-8</prop>      
	         </props>    
     	</property>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".html"/>
		<property name="requestContextAttribute" value="rc"/> 
		<property name="exposeSpringMacroHelpers" value="true"/>
		<property name="exposeRequestAttributes" value="true"/>
		<property name="allowRequestOverride" value="true"/>
		<property name="exposeSessionAttributes" value="true" />
		<property name="allowSessionOverride" value="true"/>
		<property name="contentType"><value>text/html;charset=UTF-8</value></property>
		<property name="dateToolAttribute" value="date" />
		<property name="numberToolAttribute" value="number" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="200000"/>
	</bean>
	 
	<mvc:resources mapping="/check.html" location="/check.html"/>
	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<mvc:resources mapping="/img/**" location="/img/"/>
	<mvc:resources mapping="/html/**" location="/html/"/>
	<mvc:resources mapping="/*.txt" location="/"/>
	
	
    <!-- 引入jdbc配置文件 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
               <value>classpath:properties/*.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 不使用properties来配置 -->
	   <!-- 使用properties来配置 -->
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
	</bean>

	<!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xiss.dao" />
	</bean>

    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>  
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" /> -->
	</bean>
	
	<!-- 实例化bean -->  
    <!-- <bean id= "BalancesQuartz" class ="com.xiss.jobs.balances.BalancesJobs"/> -->
    <!-- 配置MethodInvokingJobDetailFactoryBean -->  
    <!-- 
    <bean id= "BalancesTaskMethod"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
           <property name="targetObject" ref="BalancesQuartz"/>  
           <property name="targetMethod" value="insertBalance"/>  
           <property name="concurrent" value="false"/>  
    </bean>
	 -->      
    <!-- 配置定时表达式 -->  
    <!-- 
    <bean id= "BalancesTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean" >  
           <property name="jobDetail" ref="BalancesTaskMethod" />   
        	<property name="cronExpression" value="0 0/1 * * * ?" />
          	<property name="cronExpression" value="0 0 1 ? * MON" />
    </bean>
     -->  
    <!-- 配置调度工厂 -->  
    <!-- 
    <bean id= "BalancesSchedulerFactoryBean"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
           <property name="triggers" >  
                 <list>  
                       <ref bean="BalancesTaskTrigger" />  
                 </list>  
           </property>  
    </bean>  
     -->
</beans>